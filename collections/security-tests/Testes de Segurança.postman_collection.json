{
	"info": {
		"_postman_id": "a783d60f-9bfb-4993-9f97-78daf7bbac9b",
		"name": "Testes de Segurança",
		"description": "**O ServeRest é uma API REST gratuita que simula uma loja virtual com intuito de servir de material de estudos de testes de API.**\n\nEstes testes avaliam as vulnerabilidades da API, garantindo proteção contra ameaças como injeções, autenticação e exposição de dados.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38510210"
	},
	"item": [
		{
			"name": "Cadastrar carrinho",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code é 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Validar mensagem de sucesso\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
							"});\r",
							"\r",
							"const resposta = pm.response.json();\r",
							"pm.collectionVariables.set(\"idCarrinho\", resposta._id);\r",
							"\r",
							"pm.test(\"Validação da estrutura de resposta - Criação de Produto\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an(\"object\");\r",
							"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
							"    pm.expect(jsonData).to.have.property(\"_id\").that.is.a(\"string\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"produtos\": [\n    {\n      \"idProduto\": \"BeeJh5lz3k6kSIzA\",\n      \"quantidade\": 1\n    },\n    {\n      \"idProduto\": \"YaeJ455lz3k6kSIzA\",\n      \"quantidade\": 3\n    }\n  ]\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/carrinhos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"carrinhos"
					]
				},
				"description": "Não é permitido cadastrar produto com nome já utilizado"
			},
			"response": [
				{
					"name": "Cadastro com sucesso",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/produtos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"produtos"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
				},
				{
					"name": "Já existe produto com esse nome",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/produtos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"produtos"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Token ausente, inválido ou expirado",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/produtos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"produtos"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Rota exclusiva para administradores (`administrador = true`)",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/produtos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"produtos"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Cadastrar usuário",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code é 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Validar mensagem de sucesso\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
							"});\r",
							"\r",
							"const resposta = pm.response.json();\r",
							"pm.collectionVariables.set(\"idUsuario\", resposta._id);\r",
							"\r",
							"pm.test(\"Validação da estrutura de resposta - Criação de Usuário\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an(\"object\");\r",
							"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
							"    pm.expect(jsonData).to.have.property(\"_id\").that.is.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"nome\": \"Fulano da Silva\",\n  \"email\": \"beltrano@qa.com.br\",\n  \"password\": \"teste\",\n  \"administrador\": \"true\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/usuarios",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios"
					]
				},
				"description": "Não é permitido cadastrar usuário com email já utilizado"
			},
			"response": [
				{
					"name": "Cadastro com sucesso",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nome\": \"Fulano da Silva\",\n  \"email\": \"beltrano@qa.com.br\",\n  \"password\": \"teste\",\n  \"administrador\": \"true\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/localhost:3000/usuarios",
							"path": [
								"localhost:3000",
								"usuarios"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
				},
				{
					"name": "E-mail já cadastrado",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/usuarios",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Buscar produto por ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code é 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validação da estrutura de resposta - Consulta de Produto por ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an(\"object\");\r",
							"    pm.expect(jsonData).to.have.property(\"nome\").that.is.a(\"string\");\r",
							"    pm.expect(jsonData).to.have.property(\"preco\").that.is.a(\"number\");\r",
							"    pm.expect(jsonData).to.have.property(\"descricao\").that.is.a(\"string\");\r",
							"    pm.expect(jsonData).to.have.property(\"quantidade\").that.is.a(\"number\");\r",
							"    pm.expect(jsonData).to.have.property(\"_id\").that.is.a(\"string\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/produtos/{{idProduto}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"produtos",
						"{{idProduto}}"
					]
				}
			},
			"response": [
				{
					"name": "Produto encontrado",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "/localhost:3000/produtos/:_id",
							"path": [
								"localhost:3000",
								"produtos",
								":_id"
							],
							"variable": [
								{
									"key": "_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\",\n  \"_id\": \"<string>\"\n}"
				},
				{
					"name": "Produto não encontrado",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/produtos/:_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"produtos",
								":_id"
							],
							"variable": [
								{
									"key": "_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		}
	]
}